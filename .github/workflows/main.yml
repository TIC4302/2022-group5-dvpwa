name: CI

on:
   push:
     branches: [master]

jobs:
   build:
     runs-on: ubuntu-latest

     steps:
       - uses: actions/checkout@v2

       - name: Build docker-compose
         run: docker-compose -f docker-compose.yml up --build -d

   secret-scan:
     runs-on: ubuntu-latest

     steps:
       - uses: actions/checkout@v2
       - run: mkdir -p logs/ 

       - name: Whispers
         run: pip install whispers 

       - name: Repo scan
         run: whispers ~/2022-group5-dvpwa > logs/whisper_reposcan.json

       - uses: actions/upload-artifact@v2
         with:
             name: Whisper results
             path: logs

   sca:
     runs-on: ubuntu-latest
  
     steps:
       - uses: actions/checkout@v2
       - run: mkdir -p logs/

       - name: Safety
         run: |
           pip install safety
           safety check -r requirements.txt > logs/safetychecked.txt

       - name: Pyraider
         run: |
           pip install pyraider
           pyraider check -f app/web/requirements.txt > logs/pyraided.txt
            
       - uses: actions/upload-artifact@v2
         with:
             name: logs
             path: logs

   deploy:
     needs: [build]
     runs-on: ubuntu-latest

     steps:
       - uses: actions/checkout@v2

       - name: Set up QEMU
         uses: docker/setup-qemu-action@v1
      
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v1
      
       - name: Login to DockerHub
         uses: docker/login-action@v1 
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}
      
       - name: Build and push App
         uses: docker/build-push-action@v2
         with:
           context: .
           file: Dockerfile.app
           push: true
           tags: mtahgg/4302-project:app

       - name: Build and push DB
         uses: docker/build-push-action@v2
         with:
           context: .
           file: Dockerfile.db
           push: true
           tags: mtahgg/4302-project:db

   image-scan:
     needs: [deploy]
     runs-on: ubuntu-latest
  
     steps:
       - name: Login to DockerHub
         uses: docker/login-action@v1 
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

       - name: Run Dockle on App
         uses: erzz/dockle-action@v1.2.0
         with:
           image: mtahgg/4302-project:app
           report-format: json
           report-name: dockle-report-app

       - name: Run Dockle on DB
         uses: erzz/dockle-action@v1.2.0
         with:
           image: mtahgg/4302-project:db
           report-format: json
           report-name: dockle-report-db
          
       - name: Upload Report
         uses: actions/upload-artifact@v2
         if: always()
         with:
           name: Dockle Report
           path: dockle-report.json

   dast:
     needs: [image-scan]
     runs-on: ubuntu-latest

     steps:
      - uses: actions/checkout@v2

      - name: Build docker-compose
        run: docker-compose -f docker-compose.yml up --build -d

      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.3.0
        with:
          target: 'http://localhost:8080'
          cmd_options: '-a -l FAIL'



