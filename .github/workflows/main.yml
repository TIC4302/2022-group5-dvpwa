name: group5-dvpwa-DevSecOps

on:
   push:
     branches: [master]

jobs:
   secret-scan:
     runs-on: ubuntu-latest

     steps:
       - uses: actions/checkout@v2
       - run: mkdir -p logs/ 

       - name: Whispers
         run: pip install whispers 

       - name: Repo scan
         run: whispers ~/2022-group5-dvpwa > logs/whisper_reposcan.json

       - uses: actions/upload-artifact@v2
         with:
             name: Whisper results
             path: logs

   build:
     needs: [secret-scan]
     runs-on: ubuntu-latest

     steps:
       - uses: actions/checkout@v2

       - name: Build docker-compose
         run: docker-compose -f docker-compose.yml up --build -d

   sca:
     needs: [build]
     runs-on: ubuntu-latest
  
     steps:
       - uses: actions/checkout@v2
       - run: mkdir -p logs/

       - name: Safety
         run: |
           pip install safety
           safety check -r requirements.txt > logs/safetychecked.txt
            
       - uses: actions/upload-artifact@v2
         with:
             name: Safety results
             path: logs/safetychecked.txt
   
   sast:
     needs: [build]
     runs-on: ubuntu-latest

     steps:
 
       - uses: actions/checkout@v2 
       - run: mkdir -p logs/

       - name: Security check - Bandit
         uses: jpetrucciani/bandit-check@master
         with:
           continue-on-error: true
           path: ./
           bandit_flags: '-o logs/banditreport.json -f json'

         #uses: Joel-hanson/bandit-report-artifacts@V1
         #with:
           #python_version: 3.8.10
           #project_path: ~/2022-group5-dvpwa/sqli
           #ignore_failure: false

       - name: Bandit report
         uses: actions/upload-artifact@v2      
         with:
           name: bandit
           path: logs/banditreport.json


   dockerfile-linter:
     needs: [sca,sast]
     runs-on: ubuntu-latest
     steps:

       - uses: actions/checkout@v2

       - name: Lint Dockerfile App
         uses: hadolint/hadolint-action@v2.0.0
         with:
           dockerfile: ./DockerfileApp
           no-fail: true

       - name: Lint Dockerfile DB
         uses: hadolint/hadolint-action@v2.0.0
         with:
           dockerfile: ./DockerfileDB
           no-fail: true

   docker-bnp:
     needs: [dockerfile-linter]
     runs-on: ubuntu-latest

     steps:
       - uses: actions/checkout@v2

       - name: Set up QEMU
         uses: docker/setup-qemu-action@v1
      
       - name: Set up Docker Buildx
         uses: docker/setup-buildx-action@v1
      
       - name: Login to DockerHub
         uses: docker/login-action@v1 
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}
      
       - name: Build and push App
         uses: docker/build-push-action@v2
         with:
           context: .
           file: DockerfileApp
           push: true
           tags: mtahgg/4302-project:app

       - name: Build and push DB
         uses: docker/build-push-action@v2
         with:
           context: .
           file: DockerfileDB
           push: true
           tags: mtahgg/4302-project:db

   container-scan:
     needs: [docker-bnp]
     runs-on: ubuntu-latest
  
     steps:
       - uses: actions/checkout@v2 
        
       - run: mkdir -p logs/

       - name: Login to DockerHub
         uses: docker/login-action@v1 
         with:
           username: ${{ secrets.DOCKERHUB_USERNAME }}
           password: ${{ secrets.DOCKERHUB_TOKEN }}

       - name: Run Dockle on App
         uses: erzz/dockle-action@v1.2.0
         with:
           image: mtahgg/4302-project:app
           report-format: json
           report-name: logs/dockle-report-app

       - name: Run Dockle on DB
         uses: erzz/dockle-action@v1.2.0
         with:
           image: mtahgg/4302-project:db
           report-format: json
           report-name: logs/dockle-report-db
          
       - name: Upload Report
         uses: actions/upload-artifact@v2
         if: always()
         with:
           name: Dockle Report
           path: |
             logs/dockle-report-app.json
             logs/dockle-report-db.json

   deploy-dast:
     needs: [container-scan]
     runs-on: ubuntu-latest

     steps:
       - uses: actions/checkout@v2

       - name: Build docker-compose
         run: docker-compose -f docker-compose.yml up --build -d

       - name: ZAP Scan
         uses: zaproxy/action-full-scan@v0.3.0
         with:
           target: 'http://localhost:8080'
           cmd_options: 'a -l WARN'
           allow_issue_writing: false
           fail_action: false
